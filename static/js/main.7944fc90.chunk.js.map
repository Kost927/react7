{"version":3,"sources":["components/Form/Form.module.css","components/Alert/Alert.module.css","components/ContactsListItem/ContactsListItem.module.css","redux/contacts/contactsConstans.js","redux/contacts/contactsActions.js","redux/operations/operations.js","components/ContactsListItem/ContactsListItem.js","components/contactslist/ContactsList.js","redux/selectors/selectors.js","components/Filter/Filter.js","components/Form/Form.js","components/Alert/Alert.js","components/App.js","redux/contacts/contactsReducers.js","redux/store.js","index.js"],"names":["module","exports","filterContacts","e","type","constans","payload","target","value","sameContact","addContactRequest","addContactSuccess","contact","addContactError","error","getContactRequest","getContactSuccess","contacts","getContactError","remooveContactRequest","remooveContactSuccess","id","remooveContactError","onAddContact","dispatch","contactsActions","axios","post","then","res","data","name","catch","fetchContacts","get","items","Object","entries","map","item","removeContact","delete","mapDispatchToProps","remooveContact","operations","connect","CSSTransition","timeout","classNames","css","number","onClick","state","filter","toLowerCase","includes","key","getFilter","createSelector","getFilteredValue","onChange","handleSubmit","addContact","in","appear","unmountOnExit","className","title","onSubmit","Alert","alert","App","preventDefault","props","find","showAlert","setTimeout","setState","this","alertActive","Component","combineReducers","action","middleware","thunk","store","createStore","contactsReducers","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7944fc90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Form_title__lNS_Y\",\"appear\":\"Form_appear__2zyrQ\",\"appearActive\":\"Form_appearActive__LYba0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__1rkHi\",\"enter\":\"Alert_enter__2H2-l\",\"enterActive\":\"Alert_enterActive__3N49p\",\"exit\":\"Alert_exit__2bOIM\",\"exitActive\":\"Alert_exitActive__tyqhD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactsListItem_enter__2lc4u\",\"enterActive\":\"ContactsListItem_enterActive__zRiJv\",\"exit\":\"ContactsListItem_exit__2BVIh\",\"exitActive\":\"ContactsListItem_exitActive__3-q-f\"};","const ADD_CONTACT = \"@contacts/addContact\";\nconst REMOVE_CONTACT = \"@contacts/removeContact\";\nconst FILTER_CONTACT = \"@contacts/filterContact\";\nconst SAME_CONTACT = \"@contacts/sameContact\";\n\nconst ADD_CONTACT_REQUEST = \"@contacts/addRequest\";\nconst ADD_CONTACT_SUCCESS = \"@contacts/addSuccess\";\nconst ADD_CONTACT_ERROR = \"@contacts/addError\";\n\nconst GET_CONTACT_REQUEST = \"@contacts/getRequest\";\nconst GET_CONTACT_SUCCESS = \"@contacts/getSuccess\";\nconst GET_CONTACT_ERROR = \"@contacts/getError\";\n\nconst REMOOVE_CONTACT_REQUEST = \"@contacts/remooveRequest\";\nconst REMOOVE_CONTACT_SUCCESS = \"@contacts/remooveSuccess\";\nconst REMOOVE_CONTACT_ERROR = \"@contacts/remooveError\";\n\n\n\nexport default { \n    ADD_CONTACT, \n    REMOVE_CONTACT, \n    FILTER_CONTACT, \n    SAME_CONTACT, \n\n    ADD_CONTACT_REQUEST, \n    ADD_CONTACT_SUCCESS, \n    ADD_CONTACT_ERROR,\n\n    GET_CONTACT_REQUEST,\n    GET_CONTACT_SUCCESS,\n    GET_CONTACT_ERROR,\n\n    REMOOVE_CONTACT_REQUEST,\n    REMOOVE_CONTACT_SUCCESS,\n    REMOOVE_CONTACT_ERROR,\n};\n","import constans from './contactsConstans';\n\n// !====================== ADD =========================\n\nconst addContactRequest = () => {\n  return {\n    type: constans.ADD_CONTACT_REQUEST,\n \n  };\n};\n\nconst addContactSuccess = contact => {\n  return {\n    type: constans.ADD_CONTACT_SUCCESS,\n    payload: {\n      ...contact,\n      \n    },\n  };\n};\n\n  const addContactError = (error) => {\n    return {\n      type: constans.ADD_CONTACT_ERROR,\n      payload: error,\n    };\n  };\n\n// !==================== GET ===========================\n\nconst getContactRequest = () => {\n  return {\n    type: constans.GET_CONTACT_REQUEST,\n    \n  };\n};\n\nconst getContactSuccess = (contacts) => {\n  return {\n    type: constans.GET_CONTACT_SUCCESS,\n    payload: contacts\n  };\n};\n\nconst getContactError = () => {\n  return {\n    type: constans.GET_CONTACT_ERROR,\n    \n  };\n};\n// !====================== REMOOVE =========================\n\nconst remooveContactRequest = () => {\n  return {\n    type: constans.REMOOVE_CONTACT_REQUEST,\n    \n  };\n};\n\nconst remooveContactSuccess = (id) => {\n  return {\n    type: constans.REMOOVE_CONTACT_SUCCESS,\n    payload: id\n  };\n};\n\nconst remooveContactError = (error) => {\n  return {\n    type: constans.REMOOVE_CONTACT_ERROR,\n    payload: { error }\n    \n  };\n};\n\n\n// !===============================================\n\n\n  const filterContacts = e => {\n    return {\n      type: constans.FILTER_CONTACT,\n      payload: e.target.value,\n    };\n  };\n\n  const sameContact = () => {\n    return {\n      type: constans.SAME_CONTACT,\n    };\n  };\n\n  export default { \n    filterContacts, \n    sameContact, \n\n    addContactRequest, \n    addContactSuccess, \n    addContactError,\n\n    getContactRequest,\n    getContactSuccess,\n    getContactError,\n\n    remooveContactRequest,\n    remooveContactSuccess,\n    remooveContactError,\n  }","import axios from 'axios'\nimport contactsActions from '../contacts/contactsActions'\n\n\n\nconst onAddContact = (contact) => dispatch => {\n    dispatch(contactsActions.addContactRequest())\n    axios.post('https://bc22hwreact7.firebaseio.com/contacts.json', contact)\n    .then(res => dispatch(contactsActions.addContactSuccess({...contact, id: res.data.name})))\n    .catch(error => dispatch(contactsActions.addContactError( error)))\n\n}\n\nconst fetchContacts = () => dispatch => {\n    dispatch(contactsActions.getContactRequest());\n  \n    axios\n      .get('https://bc22hwreact7.firebaseio.com/contacts.json')\n      \n      .then((res) => {\n          if (res.data) {\n        const entries = Object.entries(res.data)\n        const items = entries.map(item => ({...item[1], id: item[0]}))\n        dispatch(contactsActions.getContactSuccess(items))\n          } else return\n      \n    })\n      .catch(error => dispatch(contactsActions.getContactError(error)));\n};\n\n\n\nconst removeContact  = id => dispatch => {\n    dispatch(contactsActions.remooveContactRequest());\n    axios\n      .delete(`https://bc22hwreact7.firebaseio.com/contacts/${id}.json`)\n  .then(() => {\n    dispatch(contactsActions.remooveContactSuccess(id))})\n      .catch(error => {\n        dispatch(contactsActions.remooveContactError(error))});\n  };\n\nexport default {onAddContact, fetchContacts, removeContact}","import React from 'react';\nimport { CSSTransition} from 'react-transition-group';\nimport css from \"./ContactsListItem.module.css\";\n\nimport { connect } from 'react-redux';\n// import contactsActions from '../../redux/contacts/contactsActions';\nimport operations from '../../redux/operations/operations';\n\nconst ContactsListItem = ({ contact, remooveContact }) => {\n  return (\n    <>\n        <CSSTransition  timeout={1000} classNames={css}>\n        <li name=\"name\">\n          {contact.name}: {contact.number}\n          <button type=\"button\" onClick={() => remooveContact(contact.id)}>\n            Delete\n          </button>\n        </li>\n        </CSSTransition>\n       \n    </>\n  );\n};\n\n\nconst mapDispatchToProps =  {\n//   return {\n// removeContact: () => dispatch(contactsActions.removeContact(ownProps.contact.id))\n//   }\n  remooveContact: operations.removeContact,\n}\n\n\nexport default connect(null, mapDispatchToProps)(ContactsListItem);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ContactsListItem from '../ContactsListItem/ContactsListItem';\n\nconst ContactsList = ({ items }) => {\n  return (\n    <>\n      <ul>\n      {items.map(contact => {\n        return <ContactsListItem key={contact.id} contact={contact} />;\n      })}\n      </ul>\n    </>\n  );\n};\n\nconst mapStateToProos = state => {\n  return {\n    items: state.items.filter(contact => contact.name.toLowerCase().includes(state.filter.toLowerCase()))\n  };\n};\n\nexport default connect(mapStateToProos)(ContactsList);\n\n\n","import { createSelector } from 'reselect'\n\nconst getFilter = (state) => state.getFilter\nconst getFilterSelector = createSelector([getFilter], (filter) => filter)\n\n\nexport {getFilter, getFilterSelector}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getFilter } from '../../redux/selectors/selectors';\nimport contactsActions from '../../redux/contacts/contactsActions';\n\nfunction Filter({ getFilteredValue, filter }) {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <label>\n        Filter:{' '}\n        <input\n          type=\"text\"\n          value={filter}\n          name=\"filter\"\n          onChange={getFilteredValue}\n        />\n      </label>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    // filter: getFilterSelector(state),\n    filter: getFilter(state),\n  };\n};\n\nconst mapDispatchToProps = {\n    getFilteredValue: contactsActions.filterContacts\n  }\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Filter);\n","import React from 'react';\nimport css from './Form.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { getFilter } from '../../redux/selectors/selectors';\nimport Filter from '../Filter/Filter';\n\nconst Form = ({ handleSubmit, name, addContact, number }) => {\n  return (\n    <>\n      <CSSTransition\n        in={true}\n        appear={true}\n        classNames={css}\n        timeout={500}\n        unmountOnExit\n      >\n        <h2 className={css.title}>Phonebook</h2>\n      </CSSTransition>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name:{' '}\n          <input type=\"text\" value={name} name=\"name\" onChange={addContact} />\n        </label>\n\n        <label>\n          Number:{' '}\n          <input\n            type=\"tel\"\n            value={number}\n            name=\"number\"\n            onChange={addContact}\n          />\n        </label>\n\n        <button type=\"submit\">Add contacts</button>\n      </form>\n\n      <h2>Contacts</h2>\n\n      <Filter />\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    filter: getFilter(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Form);\n","import React from 'react'\nimport {CSSTransition} from 'react-transition-group';\nimport css from './Alert.module.css'\n// import { connect } from 'react-redux';\n\n const Alert = () => {\n    return (\n        <CSSTransition\n      in={alert}\n      classNames={css}\n      timeout={500}\n      unmountOnExit\n      >\n        <div>\n    <span className={css.alert}>This name is already in your contacts</span>\n        </div>\n        </CSSTransition>\n    )\n}\n\n// const mapStateToProps = state => {\n//     return {\n//       alert: state.alert\n//     };\n//   };\n  \n//   const mapDispatchToProps = {\n//     showAlert: contactsActions.sameContact\n//   }\n\n\nexport default Alert","import React, { Component } from \"react\";\nimport \"./App.module.css\";\nimport ContactsList from \"./contactslist/ContactsList\";\nimport Form from \"./Form/Form\";\nimport Alert from \"./Alert/Alert\";\n\nimport { connect } from 'react-redux';\nimport contactsActions from '../redux/contacts/contactsActions';\nimport operations from \"../redux/operations/operations\";\n\n\nclass App extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  componentDidMount() {\nthis.props.fetchContacts()\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.props.contacts.find(contact => contact.name === this.state.name)) {\n      this.props.showAlert()\n      setTimeout (() => this.props.showAlert(), 2000)\n    } else {\n\n    this.props.onAddContact({...this.state})\n    this.setState({name: \"\", number: \"\"})\n    }\n  };\n\n  addContact = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n      {this.props.alertActive && <Alert/>}\n        <Form\n          handleSubmit={this.handleSubmit}\n          name={name}\n          number={number}\n          addContact={this.addContact}\n        />\n        <ContactsList/>\n      </>\n    );\n  }\n}\n\nconst mapStateToProos = state => {\n  return {\n    contacts: state.items,\n    alertActive: state.alert\n  };\n};\n\nconst mapDispatchToProps = {\n  onAddContact: operations.onAddContact,\n  fetchContacts: operations.fetchContacts,\n  showAlert: contactsActions.sameContact\n  }\n\n\n\nexport default connect(mapStateToProos, mapDispatchToProps)(App);\n","import constans from './contactsConstans';\nimport { combineReducers } from 'redux';\n\n\nconst contactsReducer = (state = [], action) => {\n  switch (action.type) {\n\n    case constans.GET_CONTACT_SUCCESS:\n      return action.payload;\n\n    case constans.ADD_CONTACT_SUCCESS:\n      return [...state, action.payload];\n\n    case constans.REMOOVE_CONTACT_SUCCESS:\n      return state.filter(contact => contact.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nconst errorReduser =(state = null, action) => {\n  switch (action.type) {\n    case constans.ADD_CONTACT_ERROR:\n      return action.payload;\n\n      case constans.ADD_CONTACT_REQUEST:\n      return null;\n\n\n      default:\n        return state;\n    }\n\n}\n\nconst filterReducer = (state = \"\", action) => {\n    switch (action.type) {\n\n      case constans.FILTER_CONTACT:\n        return state = action.payload\n  \n      default:\n        return state;\n    }\n  };\n\n\n  const sameContact = (state = false, action) => {\n    switch (action.type) {\n\n      case constans.SAME_CONTACT:\n        return state = !state\n  \n      default:\n        return state;\n    }\n  };\n\nexport default combineReducers({\n  items: contactsReducer, \n  filter: filterReducer, \n  alert: sameContact, \n  error: errorReduser, \n});\n","import contactsReducers from \"./contacts/contactsReducers\";\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\n\nconst middleware = [thunk];\n\nconst store = createStore(contactsReducers, composeWithDevTools(\n  applyMiddleware(...middleware),\n  // other store enhancers if any\n));\n\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <App />,\n  </Provider>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}